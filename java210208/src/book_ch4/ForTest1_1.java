package book_ch4;
//자바언어를 사용해서 코딩을 전개하려면 보안문제로 반드시 package를 정의하도록 권장하고 있다. 
//디폴트 패키지는 물가하다.(보안문제때문에)
//그 다음에 클래스 선언문이 온다. - 형식이다. 표준이다. 약속이다.
//모든 코딩은 class선언의 좌중괄호와 우중괄호 안에 와야 한다. -왜 그렇게 해야만 하나요? 자바는 기본 단위가 클래스 이다. 
//콜백메소드 이다.(main메소드) - 시스템이 호출하는 메소드이다. -개발자는 죽어도 호출할 수 없다. -main메소드 안에 코딩하는 것은 나쁜 방법이다.
//main메소드를 선언하려면 반드시 클래스 선언이 먼저이다. - 처리주체가 JVM 즉 가상머신이다. -일꾼이 가상머신이다. 
//모든 코딩의 기준은 자바가상 머신이 해석할 수 있는 방식으로 코딩이 전개되어야 한다.
//클래스 선언하기는
//접근제한자 class라는 예약어 그리고 클래스명 순서로 선언됩니다.
//접근제한자: public private protected(예를들어 오프라인에있는 학생들하고만 공유할래), 
//같은 폴더(패키지)에 있는 클래스끼리는 공유 가능하다->friendly상태이다. class A{} ->예를들어 void methodA(){} 
//클래스 내부는 선언부와 메소드 선언부로 나누어서 코딩을 전개해본다.



public class ForTest1_1 {
	//선언부 (실행문을 적을 수 없다.) - 전역변수이다. 초기화를 생략할 수 있다. 생성자()가 있는데 생성자가 하는 역할이 전변의 초기화를 담당한다.
	//지역변수는 선언이 불가하다. (반드시 메소드 안에 있어야 한다.)
	//if문이나 for문은 사용이 불가하다. - 실행문을 갖고있다. hap = hap + i; //싥행문공식 알고리즘
	//선언과 초기화를 분리할 수 없다. -컴파일이 안되니까 실행할 수 없다.
	//int i; i=10; 이런식으로 쓰는것은 선언부에서는 안되지만 메소드에서는 가능하다.
	//메소드 안에 메소드 선언은 하지 않는다. 왜냐하면 호출할 수 없으니까.
	//일관성이 있어야 협업이 가능해진다.
	//그래서 예외를 많이두지 않는다.
	//반복되는 코드는 줄여야 한다.
	//이중으로 관리되지 않도록 해야한다.
	//////////////////////////////////////////////////////end of 선언부
	//메소드를 선언한 영역 - 변수를 선언하는 부분과는 구분해야 한다.
	public static void main(String[] args) {
		//int i = 0;
		int hap1 = 0;
		int hap2 = 0;
		for(int i=1; i <= 10; i=i+1) {
			//출력하는 문장이 for문안에 있는 경우 10번 반복 출력되니까
			if (i % 2 == 0) { //너 i로 나눈 나머지가 0하고 같은거야?
				hap1 = hap1 + i;
			}
			else {
				hap2 = hap2 + i;
			}
		}
		//나는 for문 밖에서 한번만 30을 출력하고 싶어요.
		System.out.println("1부터10까지 세면서 짝수의 합은 구한 결과는 = " + hap1 + "입니다.");
		System.out.println("1부터10까지 세면서 홀수의 합은 구한 결과는 = " + hap2 + "입니다.");
	}

}
